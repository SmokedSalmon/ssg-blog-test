@font-face {
    font-family: "Univers 49 Light Ultra Condensed";
    src: url("../../../public/fonts/Univers-49-Light-Ultra-Condensed/Univers-49-Light-Ultra-Condensed.eot");
    src: url("../../../public/fonts/Univers-49-Light-Ultra-Condensed/Univers-49-Light-Ultra-Condensed.woff2")format("woff2"),
    url("../../../public/fonts/Univers-49-Light-Ultra-Condensed/Univers-49-Light-Ultra-Condensed.woff")format("woff"),
    url("../../../public/fonts/Univers-49-Light-Ultra-Condensed/Univers-49-Light-Ultra-Condensed.ttf")format("truetype"),
    url("../../../public/fonts/Univers-49-Light-Ultra-Condensed/Univers-49-Light-Ultra-Condensed.svg#Univers 49 Light Ultra Condensed")format("svg");
}

/* @value codeFont: SFMono-Regular, Consolas, Liberation Mono, Menlo, Courier, monospace; */
@value --codeFont: Liberation Mono, Menlo, Courier, monospace;

/* body {
    font: 400 16px/1.5 "Helvetica Neue", Helvetica, Arial, sans-serif;
    color: #111;
    background-color: #fbfbfb;
    -webkit-text-size-adjust: 100%;
    -webkit-font-feature-settings: "kern" 1;
    -moz-font-feature-settings: "kern" 1;
    -o-font-feature-settings: "kern" 1;
    font-feature-settings: "kern" 1;
    font-kerning: normal;
    padding: 30px;
} */

@media only screen and (max-width: 600px) {
    /* body {
        padding: 5px;
    } */
    /* body>#content {
        padding: 0px 20px 20px 20px !important;
    } */
}

/* body>#content { */
.container {
    /* margin: 0px; */
    /* max-width: 900px; */
    /* border: 1px solid #e1e4e8; */
    /* padding: 32px; */
    /* border-radius: 2px; */
    /* margin-left: auto; */
    /* margin-right: auto; */
    max-width: 980px;
    margin-inline: auto;
    /* Font size base for all child elements */
    font-size: 16px;
    color: #eaecef;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    font-weight: lighter;
    padding: 3em;
    
}

.gfm {
    /* Inherit from the Markdown container, prevent default styles */
    font-family: inherit;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
}

.gfm-summary {
    cursor: pointer;
    text-decoration: underline;
}

.gfm-hr {
    color: #bbb;
    background-color: #bbb;
    height: 1px;
    flex: 0 1 auto;
    margin: 1em 0;
    padding: 0;
    border: none;
}

.hljs-operator {
    color: #868686;
    /* There is a bug where the syntax highlighter would pick no color for e.g. `&&` symbols in the code samples. Let's overwrite this */
}

/**
 * Emphasis
 * Tags such as <strong>, <em>, <code> in fenced code (see: https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js#L81-L83)
 * have NO token attribute attached
 * this is a work-around so far
 */
.gfm strong {
    /* color: greenyellow; */
    color: limegreen;
}
.gfm em {
    color: violet;
}

/* Inline code */
.gfm code {
    font-family: --codeFont;
    font-size: 85%;
    color: #FFCC33;
    background-color: rgb(60, 60, 60);
    padding: .2em .4em;
    border-radius: 5px;
}

/** 
 * Code block, fenced and normal
 * not sure why isn't the <pre> container comes with a class .gfm-pre???
 */
.container pre {
    padding: 1em;
    overflow: auto;
    line-height: 1.45;
    /* color: var(--fgColor-default, var(--color-fg-default)); */
    /* background-color: var(--bgColor-muted, var(--color-canvas-subtle)); */
    background-color: rgb(60, 60, 60);
    border-radius: 6px;
    word-wrap: break-word;
    /* padding: .2em .4em; */
    font-family: --codeFont;
}
.container pre>code {
    padding: 0;
    color: inherit;
}


/**
 * Blockquote
 */
.gfm-blockquote {
    margin-left: 30px;
    margin-top: 0px;
    margin-bottom: 16px;
    border-left-width: 3px;
    padding: 0 1em;
    color: #828282;
    border-left: 4px solid #e8e8e8;
    padding-left: 15px;
    /* font-size: 1.125em; */
    letter-spacing: -1px;
    /* font-style: italic; */
}

.gfm-blockquote * {
    /* font-style: normal !important; */
    letter-spacing: 0;
    /* color: #6a737d !important; */
}

/**
 * Links
 */

.gfm-a {
    color: #00FFFF;
    text-decoration: none;
}

.gfm-a:visited {
    color: #DD4477;
}

.gfm-a:hover {
    filter: brightness(75%);
    text-decoration: underline;
}

.gfm-pre {
    background-color: #f6f8fa;
    border-radius: 3px;
    font-size: 85%;
    line-height: 1.45;
    overflow: auto;
    padding: 16px;
}

/**
 * Tables
 */

.gfm-table {
    border-spacing: 2px;
    display: block;
    font-size: .875em;
    overflow: auto;
    width: 100%;
    margin-bottom: 16px;
    border-spacing: 0;
    border-collapse: collapse;
}

.gfm-td {
    padding: 6px 13px;
    border: 1px solid #dfe2e5;
}

.gfm-th {
    font-weight: 600;
    padding: 6px 13px;
    border: 1px solid #dfe2e5;
}

.gfm-tr {
    background-color: #fff;
    border-top: 1px solid #c6cbd1;
}

.gfm-table tr:nth-child(2n) {
    background-color: #f6f8fa;
}


/**
 * Others
 */

.gfm-img {
    max-width: 100%;
}

.gfm-p {
    line-height: 24px;
    font-weight: 300;
    font-size: 1em;
}

.gfm-ul {
    margin-top: 0;
}

.gfm-ul.contains-task-list {
    list-style-type: none;
}

.gfm-li {
    font-size: 1em;
    font-weight: normal;
    line-height: 1.5;
}

.gfm-li+li {
    margin-top: 0.25em;
}

.gfm-h1 {
    font-size: 10.8em;
    margin-top: 0;
    padding: 1em 0 0 0;
    padding-bottom: 16px;
    color: white;
}
.gfm-h2 {
    font-size: 3em;
    font-weight: 300;
    color: #00FFFF;
    margin: 1em 0 0 0;
    padding-bottom: 16px;
}
.gfm-h2::before {
    content: '';
    position: absolute;
    bottom: 0.15em;
    right: 0;
    display: block;
    width: 98%;
    height: 0.5em;
    background: url("../../../public/gfm-blog-h2-bg-1.svg") repeat;
    background-size: 18px 18px;
    z-index: -1;
}
.gfm-h3 {
    font-size: 2.5em;
    font-weight: 300;
    color: #FF6699;
    margin: 1em 0 0 0;
    padding-bottom: 10px;
}
.gfm-h3::after {
    content: '';
    position: absolute;
    bottom: 0.15em;
    right: 0;
    display: block;
    width: 98%;
    height: 0.4em;
    background: url("../../../public/gfm-blog-h2-bg-2.svg") repeat;
    background-size: 6px 6px;
}
.gfm-h4 {
    font-size: 2em;
    margin: 1em 0 0 0;
    font-weight: 300;
    padding-bottom: 10px;
}
.gfm-h5 {
    font-size: 1.5em;
    margin: 1em 0 0 0;
    font-weight: 300;
    padding-bottom: 10px;
}
.gfm-h6 {
    font-size: 1em;
    margin: 1em 0 0 0;
    font-weight: 300;
    padding-bottom: 10px;
}
.gfm-h1,
.gfm-h2,
.gfm-h3 {
    padding-bottom: 0.3em;
    /* border-bottom: 1px solid #eaecef; */
    /* Darker */
}

.gfm-h1,
.gfm-h2,
.gfm-h3,
.gfm-h4,
.gfm-h5,
.gfm-h6 {
    font-family: 'Univers 49 Light Ultra Condensed', Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    position: relative;
}

.gfm-h1 .header-anchor,
.gfm-h2 .header-anchor,
.gfm-h3 .header-anchor,
.gfm-h4 .header-anchor,
.gfm-h5 .header-anchor,
.gfm-h6 .header-anchor {
    position: absolute;
    margin-inline-start: -20px;
    padding-inline-end: 4px; /* hack to continue the hover even it is out of parent's hover area */
    text-decoration: none;
    visibility: hidden;
    color: white;
    height: 1em;
    display: flex;
    align-items: center;
}

.gfm-h1:hover .header-anchor,
.gfm-h2:hover .header-anchor,
.gfm-h3:hover .header-anchor,
.gfm-h4:hover .header-anchor,
.gfm-h5:hover .header-anchor,
.gfm-h6:hover .header-anchor {
    visibility: visible;
}

.gfm-ul-toc li{
    margin-top: 0;
    line-height: 1.3em;
}

/* Header */
.gfm-header {
    position: relative;
    margin-bottom: 2em;
    display: flex;
    flex-wrap: wrap;
}
.gfm-header .gfm-title {
    flex: 1 0 90%;
}
.gfm-header .gfm-h1 {
    border: 0;
    margin: 0;
    padding-bottom: 0;
}
/* Language Switcher */
.lang-dropdown {
    flex: 1 0 5em;
    align-self: flex-end;
    position: relative;
}

.lang-dropdown-toggle {
    background-color: #24292e;
    border: 1px solid #eaecef;
    border-radius: 3px;
    padding: 0.2em 0.5em;
    display: flex;
    justify-content: center;
    align-items: center;
}
.lang-dropdown-toggle :global(.down-arrow) {
    width: 0;
    height: 0;
    border-top: .5em solid white;
    border-left: .25em solid transparent;
    border-right: .25em solid transparent;
    transition: transform .3s cubic-bezier(0.22, 0.61, 0.36, 1);
}
.lang-dropdown:global(.show) :global(.down-arrow) {
    transform: rotate(180deg);
}
.lang-dropdown-toggle :global(.icon) {
    margin-inline-end: .3em;
}
.lang-dropdown-toggle :global(.separate) {
    height: 0.8em;
    margin-inline: .5em;
    border-left:1px solid #eaecef;
}

.lang-dropdown-menu {
    position: absolute;
    width: 100%;
    background-color: #24292e;
    border: 1px solid #eaecef;
    border-radius: 3px;
    visibility: hidden;
}
.lang-dropdown-menu:global(.show) {
    visibility: visible;
}

.lang-dropdown-item {
    background-color: #24292e;
    display: block;
    border: 0;
    padding: .4em .2em;
    text-align: center;
    width: 100%;
}

.lang-dropdown-item:hover, .lang-dropdown-item:global(.active) {
    filter: brightness(115%);
}

/* abstract blockquote */
.gfm-abstract {
    margin-top: 2rem;
    flex: 1 0 100%;
}
.gfm-abstract .gfm-blockquote {
    background: url("../../../public/gfm-blog-abstract-bg.svg") repeat;
    background-size: 1.25em 1.25em;
    margin: 0 -2em!important;
    padding: 0.1em 2em!important;
    border: 0!important;
}
.gfm-abstract .gfm-blockquote p {
    padding-inline: 2em;
    border-left: .4em solid #bbb;
}

/*
 *
 * MarkdownIt not adding class to children like it does automatically to their parents that are top layer elements
 */
.gfm em>* {
    color: inherit;
}

.container *::selection {
    background-color: teal;
}

/*
 * === Responsive-related ===
 * Not applying any framework such as bootstrap nor tailwind. Will adapt later
 */

 @media (max-width: 768px) {
    .container {
        font-size: 14px;
        padding: 2em;
    } 
    .gfm-image {
        max-width: 80vw;
    }
    .gfm-h1 {
        font-size: 6.8em;
    }
    .gfm-blockquote {

    }
    .gfm-table {

    }
    .gfm-p {
        line-height: 1.3em;
    }
    .gfm-li {
        
    }
 }